#!/usr/bin/env node 

/*
  (c) 2013-2014 musictheory.net, LLC
  MIT license, http://www.opensource.org/licenses/mit-license.php
*/

var fs       = require("fs");
var util     = require("util");
var ojc      = require("../src/compiler");

var args = process.argv.slice(2);
var filename;
var options = { };


out: while (args.length > 0) {
    var arg = args.shift();

    if      (arg == "--output")          options["output"] = args.shift();
    else if (arg == "--always-message")  options["always-message"] = true;

    // Additional warnings
    else if (arg == "--check-ivars")     options["check-ivars"] = true;
    else if (arg == "--check-this")      options["check-this"] = true;

    // Class removal
    else if (arg == "--without-classes") options["without-classes"] = args.shift().split(",");

    // Code Generation options
    else if (arg == "--function-name-style") options["function-name-style"] = parseInt(args.shift(), 10);
    else if (arg == "--use-prefix")          options["use-prefix"] = true;

    // Optional language features
    else if (arg == "--use-enum")        options["use-enum"] = true;
    else if (arg == "--use-const")       options["use-const"] = true;

    // Internal development
    else if (arg == "--debug")           options["debug"] = true;
    else if (arg == "--debug-ast")       options["debug"] = options["debug-ast"] = true;
    else if (arg == "--debug-modifier")  options["debug"] = options["debug-modifier"] = true;

    else {
        filename = arg;
    }
}

if (filename) {
    var inContent  = fs.readFileSync(filename, "utf8");
    var outContent;

    try {
        outContent = ojc.compile(inContent, options);
    } catch (e) {
        console.log(filename + ":" + e.lineNumber + " " + e.description);
        if (!e.errorType) console.log(e.stack);
        process.exit(2);
    }

    if (options.output) {
        fs.writeFileSync(options.output, outContent, "utf8")
    } else {
        if (outContent) {
            process.stdout.write(outContent);
        }
    }
}

process.exit(0);

