

function runTests()
{
    // AssignmentExpression
    let a = [X x];      //@codegen needs ??null

    // BlockStatement
    { [X x] }           //@codegen lacks ??null

    // BinaryExpression / LogicalExpression
    [X x] && true; //@codegen lacks ??null
    true && [X x]; //@codegen lacks ??null
    [X x] || true; //@codegen lacks ??null
    true || [X x]; //@codegen lacks ??null
    [X x] ?? true; //@codegen lacks ??null
    true ?? [X x]; //@codegen lacks ??null
    [X x] + 0;     //@codegen needs ??null
    0 + [X x];     //@codegen needs ??null
    [X x] - 0;     //@codegen needs ??null
    0 + [X x];     //@codegen needs ??null

    // ConditionalExpression
    [X x] ? "" : "";    //@codegen lacks ??null
    foo ? [X x] : "";   //@codegen needs ??null
    foo ? "" : [X x];   //@codegen needs ??null

    // DoWhileStatement
    do { } while ([X x]);       //@codegen lacks ??null
    do [X x]; while (true)      //@codegen lacks ??null

    // IfStatement
    if ([X x]) f();             //@codegen lacks ??null
    if (b) [X x];               //@codegen lacks ??null
    if (b) { f() } else [X x];  //@codegen lacks ??null

    // MemberExpression
    ([X x].foo)                 //@codegen lacks ??null
    ([X x]["foo"])              //@codegen lacks ??null

    // UnaryExpression
    ![X x];                     //@codegen lacks ??null
    ~[X x];                     //@codegen lacks ??null
    void [X x];                 //@codegen lacks ??null
    +[X x];                     //@codegen needs ??null
    -[X x];                     //@codegen needs ??null
    typeof [X x];               //@codegen needs ??null

    // WhileStatement
    while ([X x]) { };          //@codegen lacks ??null
    while (true) [X x];         //@codegen lacks ??null

    // Nested messaging
    +[[X x]                     //@codegen lacks ??null
        x]                      //@codegen needs ??null

    // Functions
    f([X x])                    //@codegen needs ??null
    f(x => [X x])               //@codegen needs ??null
    f(x => { [X x] })           //@codegen lacks ??null
}

true;

