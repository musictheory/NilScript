//@opts { }

var assert = require("assert");

@enum {
    zero = 0,
    one,
    two,
    three = 3,
    four,
    thousand = 1000,
    thousand_one
}

@enum {
    hex_255 = 0xff
}

@enum {
    negative_five = -5,
    negative_four,
    negative_three,
    negative_two
}

@enum { a,b,c,d,e,f,g }

@const the_answer = 42;
@const the_negative_answer = -42;
@const the_string_answer = "Forty Two";
@const the_null = null;
@const the_true = true;
@const the_false = false;
@const the_YES = YES;
@const the_NO = NO;
@const the_NULL = NULL;
@const the_nil = nil;
@const the_regexp = /foo/g;



@enum { one_line }
@enum { extra_comma, }

function regexEqual(r1, r2)
{
    if (r1 instanceof RegExp && r2 instanceof RegExp) {
        return r1.global     === r2.global &&
               r1.multiline  === r2.multiline &&
               r1.ignoreCase === r2.ignoreCase &&
               r1.source     ==  r2.source;
    }

    return false;
}


function runTests()
{
    assert.equal(zero, 0);
    assert.equal(one,  1);
    assert.equal(two,  2);
    assert.equal(three, 3);
    assert.equal(four, 4);
    assert.equal(thousand, 1000);
    assert.equal(thousand_one, 1001);

    assert.equal(negative_five,  -5);
    assert.equal(negative_four,  -4);
    assert.equal(negative_three, -3);
    assert.equal(negative_two,   -2);

    assert.equal(one_line, 0);
    assert.equal(extra_comma, 0);

    assert.equal(a, 0);
    assert.equal(b, 1);
    assert.equal(c, 2);
    assert.equal(d, 3);
    assert.equal(e, 4);
    assert.equal(f, 5);
    assert.equal(g, 6);

    assert.strictEqual(the_answer, 42);
    assert.strictEqual(the_negative_answer, -42);
    assert.strictEqual(the_string_answer, "Forty Two");
    assert.strictEqual(the_null, null);
    assert.strictEqual(the_true, true);
    assert.strictEqual(the_false, false);

    assert.strictEqual(the_nil, nil);
    assert.strictEqual(the_NULL, NULL);
    assert.strictEqual(the_YES, YES);
    assert.strictEqual(the_NO, NO);

    regexEqual(the_regexp, /foo/g);

    return true;
}


runTests();
