//@opts = { }

var assert = require("assert");


@class EachIteratorTests {
    Number _arrayAccessCount;
}

- (Array) testArray
{
    _arrayAccessCount++;

    return [
        [ "A", "B", "C" ],
        [ "D", "E", "F" ],
        [ "G", "H", "I" ],
    ];
}


- (BOOL) runTests
{
    function runTest(test) {
        var accessCount = _arrayAccessCount;
        test();
        assert(_arrayAccessCount, accessCount + 1);
    }

    function test1() {
        var grid = [self testArray];
        var output = "";

        @each (var row in grid) {
            @each (var col in row) {
                output += col;
            }
        }

        assert.equal(output, "ABCDEFGHI");
    }

    function test2() {
        var grid = [self testArray];
        var output = "";

        @each (var col in grid[1]) {
            output += col;
        }

        assert.equal(output, "DEF");
    }

    function test3() {
        var grid = [self testArray];
        var output = "";

        var col;
        @each (col in grid[2]) {
            output += col;
        }

        assert.equal(output, "GHI");
    }

    function test4() {
        var output = "";

        @each (var row in [self testArray]) {
            @each (var col in row) {
                output += col;
            }
        }

        assert.equal(output, "ABCDEFGHI");
    }

    function test5() {
        var output = "";

        @each (var row in [self testArray]) {
            @each (var col in row) {
                if (col == "E") {
                    break;
                }

                if (col == "H") {
                    continue;
                }

                output += col;
            }
        }

        assert.equal(output, "ABCDGI");
    }

    function test6() {
        var grid = [self testArray];
        var output = "";

        @each (var row in grid) {
            @each (var col in row) {
                output += col;
            }
        }

        @each (var row2 in grid) {
            @each (var col2 in row2) {
                output += col2;
            }
        }

        assert.equal(output, "ABCDEFGHIABCDEFGHI");
    }


    // Same as test6 but with 'let'
    function test7() {
        let grid = [self testArray];
        let output = "";

        @each (let row in grid) {
            @each (let col in row) {
                output += col;
            }
        }

        @each (let row in grid) {
            @each (let col in row) {
                output += col;
            }
        }

        assert.equal(output, "ABCDEFGHIABCDEFGHI");
    }

    runTest(test1);
    runTest(test2);
    runTest(test3);
    runTest(test4);
    runTest(test5);
    runTest(test6);
    runTest(test7);

    return true;
}

@end


var instance = [[EachIteratorTests alloc] init];
[instance runTests]
