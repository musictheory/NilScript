
(function() { "use strict";

@class Issue58Class

+ (boolean) checkWithArgument:(string)alpha argument:(string)beta
{
    if (!@CLASS.startsWith("N$")) {
        assert.equal( @CLASS,    "Issue58Class"                                );
        assert.equal( @SEL,      "checkWithArgument:argument:"                 );
        assert.equal( @FUNCTION, "+[Issue58Class checkWithArgument:argument:]" );
    }

    assert.deepEqual( @ARGS, [ alpha, beta ] );

    return YES;
}

- (boolean) check
{
    if (!@CLASS.startsWith("N$")) {
        assert.equal( @CLASS,    "Issue58Class"          );
        assert.equal( @SEL,      "check"                 );
        assert.equal( @FUNCTION, "-[Issue58Class check]" );
    }

    assert.deepEqual( @ARGS, [ ] );

    return YES;
}


@end

}());



function runTests()
{
    var instance = [[Issue58Class alloc] init];
    return [instance check] && [[Issue58Class class] checkWithArgument:"Alpha" argument:"Beta"];
}

runTests();
