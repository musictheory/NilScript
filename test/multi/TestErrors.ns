// --------------------------------------------------------------------
// @name unknown-ivars
// @opts { "warn-unknown-ivars": true  }

@class UndeclaredInstanceVariable

- (void) testCheckIvar
{
     _moo;  //@warning NilScriptUndeclaredInstanceVariableWarning
}

@end


// --------------------------------------------------------------------
// @name self-in-non-method
// @opts { "warn-self-in-non-methods": true  }

function usesSelf() {
    self; //@warning NilScriptUseOfSelfInNonMethodWarning
}


// --------------------------------------------------------------------
// @name this-in-method
// @opts { "warn-this-in-methods": true  }

@class UseOfThisInMethod

- (void) foo
{
    this.doSomething(); //@warning NilScriptUseOfThisInMethodWarning
}

@end


// --------------------------------------------------------------------
// @name Non-integer enum

@enum {
    Foo = "Foo"  // @error NilScriptNonIntegerEnumError
}


// --------------------------------------------------------------------
// @name Non-integer enum 2

@enum {
    Foo = 3.1415  // @error NilScriptNonIntegerEnumError
}


// --------------------------------------------------------------------
// @name Non-literal Const

@const moo = { };  // @error NilScriptNonLiteralConstError


// --------------------------------------------------------------------
// @name Non-literal Const 2

@const moo = (4 + 3);  // @error NilScriptNonLiteralConstError


// --------------------------------------------------------------------
// @name Non-literal Enum

@enum {
    Foo = { }  // @error NilScriptNonLiteralEnumError
}


// --------------------------------------------------------------------
// @name Non-literal Enum 2

@enum {
    Foo = (4 + 3)  // @error NilScriptNonLiteralEnumError
}


// --------------------------------------------------------------------
// @name self Reserved

@class ExampleClass

- (void) test
{
    var self = "foo";  //@error NilScriptSelfIsReservedError
}

@end


// --------------------------------------------------------------------
// @name self Reserved 2

@class ExampleClass

- (void) test
{
    function moo(self) {  //@error NilScriptSelfIsReservedError

    }
}

@end


// --------------------------------------------------------------------
// @name self Reserved 3

@class ExampleClass

- (void) test
{
    var moo = function (self) {  //@error NilScriptSelfIsReservedError

    }
}

@end


// --------------------------------------------------------------------
// @name N$ Reserved

@class TestReservedWord

- (void) test
{
    var N$foo = "foo"; //@error NilScriptReservedIdentifierError
}

@end


// --------------------------------------------------------------------
// @name N$ Reserved 2

function test() {
    var N$foo;   //@error NilScriptReservedIdentifierError
}


// --------------------------------------------------------------------
// @name Reserved Method Name

@class TestReservedMethod

- (void) alloc { }  //@error NilScriptReservedMethodNameError

@end


// --------------------------------------------------------------------
// @name Duplicate Property

@class DuplicateProperty

@property foo: id;
@property foo: id;   //@error NilScriptDuplicatePropertyError

@end


// --------------------------------------------------------------------
// @name Duplicate Property 2

@class DuplicatePropertyA
@property foo: id;
@end

@class DuplicatePropertyB : DuplicatePropertyA
@property foo: id;   //@error NilScriptDuplicatePropertyError
@end


// --------------------------------------------------------------------
// @name Duplicate Class

@class DuplicateClass
@end

@class DuplicateClass //@error NilScriptDuplicateClassError
@end


// --------------------------------------------------------------------
// @name Duplicate Method

@class DuplicateMethod

- (void) foo { }
- (void) foo { }    //@error NilScriptDuplicateMethodError

@end


// --------------------------------------------------------------------
// @name Duplicate Enum Name

@enum Foo { Foo1, Foo2 }
@enum Foo { Bar1, Bar2 } //@error NilScriptDuplicateEnumError


// --------------------------------------------------------------------
// @name Duplicate Enum Value 1

@enum Foo { Foo1, Foo2 }
@enum Bar { Foo1, Foo2 } //@error NilScriptDuplicateDeclarationError


// --------------------------------------------------------------------
// @name Duplicate Enum Value 2

@enum { Foo1, FooDuplicate }

@enum {
    Foo2,
    FooDuplicate //@error NilScriptDuplicateDeclarationError
}


// --------------------------------------------------------------------
// @name Circular Class 1
// @error-no-line NilScriptCircularClassHierarchyError

@class CircularClassA : CircularClassB
@end


@class CircularClassB : CircularClassA
@end


// --------------------------------------------------------------------
// @name Circular Class 2
// @error-no-line NilScriptCircularClassHierarchyError

@class CircularClassA : CircularClassB
@end

@class CircularClassB : CircularClassC
@end

@class CircularClassC : CircularClassD
@end

@class CircularClassD : CircularClassA
@end


// --------------------------------------------------------------------
// @name Restricted Usage 1

@class RestrictedUsageClass

@property (private) ivar1: string;

- (void) foo {
    (function(_ivar1) {      //@error NilScriptRestrictedUsageError
    });
}

@end


// --------------------------------------------------------------------
// @name Restricted Usage 2

@class RestrictedUsageClass

@property (private) ivar1: string;

- (void) foo {
    var _ivar1; //@error NilScriptRestrictedUsageError
}

@end


// --------------------------------------------------------------------
// @name Restricted Usage 3

@class RestrictedUsageClass

@property (private) ivar1: string;

- (void) foo:(id)_ivar1 {  //@error NilScriptRestrictedUsageError

}

@end


// --------------------------------------------------------------------
// @name Warn Unused Privates
// @opts { "warn-unused-privates": true  }

@class Foo
@property (private) bar: id; //@warning NilScriptUnusedPrivatePropertyWarning
@end


// --------------------------------------------------------------------
// @name Warn Unused Privates 2
// @opts { "warn-unused-privates": true  }

@class Foo

@property (private) bar: id; //@warning NilScriptUnassignedPrivatePropertyWarning

- (void) doSomethingWithBar
{
    [_bar doSomething];
}

@end


// --------------------------------------------------------------------
// @name Cannot Use Instance Variable

@class Foo
@property theProperty: id;
@end

@class Bar : Foo

- (void) doSomethingWithTheProperty
{
    [_theProperty doSomething]; //@error NilScriptCannotUseInstanceVariableError
}

@end


// --------------------------------------------------------------------
// @name Unknown Super Class

@class Foo : NonExistantSuperClass //@error NilScriptInheritanceError

@end


// --------------------------------------------------------------------
// @name Missing Method Name (Protocol)

@protocol MissingMethodName
- (string); //@error NilScriptParseError
@end

// --------------------------------------------------------------------
// @name Missing Method Name (Implementation)

@class MissingMethodName
- (string) { return ""; } //@error NilScriptParseError
@end

