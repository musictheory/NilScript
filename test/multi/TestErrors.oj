// --------------------------------------------------------------------
// @name unknown-ivars
// @opts { "warn-unknown-ivars": true  }

@class UndeclaredInstanceVariable

@property id foo;

- (void) setFoo:(id)foo { _foo = foo; } //@warning NilScriptUndeclaredInstanceVariableWarning
- (id) foo { return _foo; }             //@warning NilScriptUndeclaredInstanceVariableWarning

@end


// --------------------------------------------------------------------
// @name unknown-ivars 2
// @opts { "warn-unknown-ivars": true  }

@class UndeclaredInstanceVariable

@property (readonly) id foo;

- (id) foo { return _foo; } //@warning NilScriptUndeclaredInstanceVariableWarning

@end


// --------------------------------------------------------------------
// @name unknown-ivars 3
// @opts { "warn-unknown-ivars": true  }

@class UndeclaredInstanceVariable

- (void) testCheckIvar
{
     _moo;  //@warning NilScriptUndeclaredInstanceVariableWarning
}

@end


// --------------------------------------------------------------------
// @name self-in-non-method
// @opts { "warn-self-in-non-methods": true  }

@class UseOfThisInMethod

function usesSelf() {
    self; //@warning NilScriptUseOfSelfInNonMethodWarning
}

@end


// --------------------------------------------------------------------
// @name this-in-method
// @opts { "warn-this-in-methods": true  }

@class UseOfThisInMethod

- (void) foo
{
    this.doSomething(); //@warning NilScriptUseOfThisInMethodWarning
}

@end


// --------------------------------------------------------------------
// @name Non-integer enum

@enum {
    Foo = "Foo"  // @error NilScriptNonIntegerEnumError
}


// --------------------------------------------------------------------
// @name Non-integer enum 2

@enum {
    Foo = 3.1415  // @error NilScriptNonIntegerEnumError
}


// --------------------------------------------------------------------
// @name Non-literal Const

@const moo = { };  // @error NilScriptNonLiteralConstError


// --------------------------------------------------------------------
// @name Non-literal Const 2

@const moo = (4 + 3);  // @error NilScriptNonLiteralConstError


// --------------------------------------------------------------------
// @name Non-literal Enum

@enum {
    Foo = { }  // @error NilScriptNonLiteralEnumError
}


// --------------------------------------------------------------------
// @name Non-literal Enum 2

@enum {
    Foo = (4 + 3)  // @error NilScriptNonLiteralEnumError
}


// --------------------------------------------------------------------
// @name self Reserved

@class ExampleClass

- (void) test
{
    var self = "foo";  //@error NilScriptSelfIsReservedError
}

@end


// --------------------------------------------------------------------
// @name self Reserved 2

@class ExampleClass

- (void) test
{
    function moo(self) {  //@error NilScriptSelfIsReservedError

    }
}

@end


// --------------------------------------------------------------------
// @name self Reserved 3

@class ExampleClass

- (void) test
{
    var moo = function (self) {  //@error NilScriptSelfIsReservedError

    }
}

@end


// --------------------------------------------------------------------
// @name $ns Reserved

@class TestReservedWord

- (void) test
{
    var $ns_foo = "foo"; //@error NilScriptDollarNSIsReservedError
}

@end


// --------------------------------------------------------------------
// @name $ns Reserved 2

function test() {
    var $ns_foo;   //@error NilScriptDollarNSIsReservedError
}


// --------------------------------------------------------------------
// @name Ivar Claimed
// @error-no-line NilScriptInstanceVariableAlreadyClaimedError

@class InstanceVariableAlreadyClaimed

@property id foo;
@property id foo2;

@synthesize foo=_bar;
@synthesize foo2=_bar;

@end


// --------------------------------------------------------------------
// @name Ivar Claimed 2
// @error-no-line NilScriptInstanceVariableAlreadyClaimedError

@class InstanceVariableAlreadyClaimed2

@property id foo;
@property id foo2;

@synthesize foo2=_foo;

@end


// --------------------------------------------------------------------
// @name Property Already Dynamic

@class PropertyAlreadyDynamic

@property id foo;
@dynamic foo;
@synthesize foo=_bar;   //@error NilScriptPropertyAlreadyDynamicError

@end


// --------------------------------------------------------------------
// @name Property Already Dynamic 2

@class PropertyAlreadyDynamic

@property id foo;
@dynamic foo;
@dynamic foo;       //@error NilScriptPropertyAlreadyDynamicError

@end


// --------------------------------------------------------------------
// @name Property Already Synthesized

@class PropertyAlreadySynthesized

@property id foo;
@synthesize foo=_foo;
@synthesize foo=_bar;   //@error NilScriptPropertyAlreadySynthesizedError

@end


// --------------------------------------------------------------------
// @name Reserved Method Name

@class TestReservedMethod

- (void) isSubclassOfClass:(id)unused { }   //@error NilScriptReservedMethodNameError

@end


// --------------------------------------------------------------------
// @name Reserved Method Name 2

@class TestReservedMethod

- (void) alloc { }  //@error NilScriptReservedMethodNameError

@end


// --------------------------------------------------------------------
// @name Duplicate Property

@class DuplicateProperty

@property id foo;
@property id foo;   //@error NilScriptDuplicatePropertyDefinitionError

@end


// --------------------------------------------------------------------
// @name Duplicate Class

@class DuplicateClass
@end

@class DuplicateClass //@error NilScriptDuplicateDeclarationError
@end


// --------------------------------------------------------------------
// @name Duplicate Method

@class DuplicateMethod

- (void) foo { }
- (void) foo { }    //@error NilScriptDuplicateMethodDefinitionError

@end


// --------------------------------------------------------------------
// @name Duplicate Enum Name

@enum Foo { Foo1, Foo2 }
@enum Foo { Bar1, Bar2 } //@error NilScriptDuplicateDeclarationError


// --------------------------------------------------------------------
// @name Duplicate Enum Value 1

@enum Foo { Foo1, Foo2 }
@enum Bar { Foo1, Foo2 } //@error NilScriptDuplicateDeclarationError


// --------------------------------------------------------------------
// @name Duplicate Enum Value 2

@enum { Foo1, FooDuplicate }

@enum {
    Foo2,
    FooDuplicate //@error NilScriptDuplicateDeclarationError
}


// --------------------------------------------------------------------
// @name Circular Class 1
// @error-no-line NilScriptCircularClassHierarchyError

@class CircularClassA : CircularClassB
@end


@class CircularClassB : CircularClassA
@end

// --------------------------------------------------------------------
// @name Circular Class 2
// @error-no-line NilScriptCircularClassHierarchyError

@class CircularClassA : CircularClassB
@end

@class CircularClassB : CircularClassC
@end

@class CircularClassC : CircularClassD
@end

@class CircularClassD : CircularClassA
@end

// --------------------------------------------------------------------
// @name Restricted Usage 1

@class RestrictedUsageClass {
    id ivar1;
}

- (void) foo {
    (function(ivar1) {      //@error NilScriptRestrictedUsageError
    });
}

@end


// --------------------------------------------------------------------
// @name Restricted Usage 2

@class FooClass
@end

@class RestrictedUsageClass {
    id ivar1;
}

- (void) foo {
    var ivar1; //@error NilScriptRestrictedUsageError
}

@end



// --------------------------------------------------------------------
// @name Restricted Usage 3

@class FooClass
@end

@class RestrictedUsageClass {
    id ivar1;
}

- (void) foo:(id)ivar1 {  //@error NilScriptRestrictedUsageError

}

@end


// --------------------------------------------------------------------
// @name Category No Ivars

@class CategoryNoIvars (CategoryName) { //@error NilScriptParseError

}

@end


// --------------------------------------------------------------------
// @name Category Properties Not Yet Supported

@class CategoryNoProperties (CategoryName)
@property String foo; //@error NilScriptNotYetSupportedError
@end


// --------------------------------------------------------------------
// @name Warn Debugger
// @opts { "warn-debugger": true  }

function foo() {
    debugger;  //@warning NilScriptUseOfDebuggerWarning
}


// --------------------------------------------------------------------
// @name Warn Empty Array
// @opts { "warn-empty-array-element": true  }

var arr = [,,,,];  //@warning NilScriptUseOfEmptyArrayElementWarning


// --------------------------------------------------------------------
// @name Warn Unused Ivars
// @opts { "warn-unused-ivars": true  }

@class Foo { //@warning NilScriptUnusedInstanceVariableWarning
    id _bar;
}

@end



// --------------------------------------------------------------------
// @name Warn Unused Ivars 2
// @opts { "warn-unused-ivars": true  }

@class Foo { //@warning NilScriptUnassignedInstanceVariableWarning
    id _bar;
}

- (void) doSomethingWithBar
{
    [_bar doSomething];
}

@end




// --------------------------------------------------------------------
// @name Unknown Super Class

@class Foo : NonExistantSuperClass //@error NilScriptUnknownSuperclassError

@end


// --------------------------------------------------------------------
// @name Missing Method Name (Protocol)

@protocol MissingMethodName
- (String); //@error NilScriptParseError
@end

// --------------------------------------------------------------------
// @name Missing Method Name (Implementation)

@class MissingMethodName
- (String) { return ""; } //@error NilScriptParseError
@end

